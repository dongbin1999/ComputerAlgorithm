import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;

public class Main {
    // -x^2 + 38x+ 80 ( 0 <= x <= 31)

    public static int fx(int x) {
        return -x*x + 38 * x + 80;
    }

    public static int[] init() {
        Random r = new Random();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = r.nextInt(31+1);
            //System.out.printf("%d ",arr[i]);
        }
        //System.out.println();
        return arr;
    }

    public static int[] selection(int[] x) {
        int sum = 0;
        int[] f = new int[x.length];
        for (int i = 0; i < x.length; i++) {
            f[i] = fx(x[i]);
            sum += f[i];
        }

        double[] ratio = new double[x.length];
        for (int i = 0; i < x.length; i++) {
            if(i==0)  ratio[i] = (double)f[i] / (double)sum;
            else ratio[i] = ratio[i-1] + (double)f[i] / (double)sum;
            //System.out.printf("%f ",ratio[i]);
        }
        //System.out.println();

        int[] sx = new int[x.length];
        Random r = new Random();
        for (int i = 0; i < x.length ; i++) {
            double p = r.nextDouble();
            if(p < ratio[0]) sx[i] = x[0];
            else if(p < ratio[1]) sx[i] = x[1];
            else if(p < ratio[2]) sx[i] = x[2];
            else sx[i] = x[3];
            //System.out.printf("%d ",sx[i]);
        }
        //System.out.println();
        return sx;
        //[0.5,0.25,0.15,0.05]
        //=>[0.5,0.75,0.90,1]
    }

    //string 길이를 5로 고정.
    public static String int2String(String x) {
        return String.format("%8s", x).replace(' ', '0');
    }

    public static String[] crossOver(int[] x) {
        String[] arr = new String[x.length];
        for (int i = 0; i < x.length; i+=2) {
            String bit1 = int2String(Integer.toBinaryString(x[i]));
            String bit2 = int2String(Integer.toBinaryString(x[i + 1]));
            //System.out.println(bit1);
            //System.out.println(bit2);
            arr[i] = bit1.substring(0,2) + bit2.substring(2,5);
            arr[1 + 1] = bit2.substring(0,2) + bit1.substring(2,5);
            //System.out.println(arr[i]);
            //System.out.println(arr[i + 1]);
        }
        return arr;
    }

    //돌연변이 함수.
    public static int invert(String x) {
        Random r = new Random();
        int a = Integer.parseInt(x,2);
        //System.out.println(a);
        for (int i = 0; i < x.length(); i++) {
            //비트길이 5를 따와서 1/5로 해도 좋음.
            double p = (double)1 / (double)32;
            //문자열을 이진수로 인식해서 정수로 리턴해줌.
            if(r.nextDouble() < p) {
                //System.out.println(true);
                a = 1 << i ^ a;
            }
            /*else {
                System.out.println(false);
            }*/
        }
        //System.out.println(a);
        return a;
    }

    public static int[] mutation(String[] x) {
        int[] arr = new int[x.length];
        for (int i = 0; i < x.length; i++) {
            arr[i] = invert(x[i]);
        }
        return arr;
    }

    public static void main(String[] args) {
        //초기화
        int[] x = init();

        for (int i = 0; i < 1000; i++) {
            //선택연산
            int[] sx = selection(x);
            //교차연산
            String[] cx = crossOver(sx);
            //
            int[] mx =  mutation(cx);

            int[] f = new int[mx.length];
            int max = 0;
            for (int j = 0; j < mx.length; j++) {
                f[j] = fx(mx[j]);
                max = Math.max(max, f[j]);
                System.out.printf("%d ", f[j]);
            }
            System.out.println();

            System.out.println(max);
        }
    }
}